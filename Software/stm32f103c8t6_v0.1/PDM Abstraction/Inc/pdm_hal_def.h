/*
 * opdm_hal_def.h
 *
 *  Created on: 28 de abr de 2023
 *      Author: breno
 */

#ifndef __OPDM_HAL_DEF_H_
#define __OPDM_HAL_DEF_H_


#include "stm32f1xx_hal.h"
#include "stm32f1xx_hal_def.h"
#include "pdm_def.h"
#include <stddef.h>

/* CAN payload length and DLC definitions according to ISO 11898-1 */
#define CAN_MAX_DLC 8
#define CAN_MAX_DLEN 8
#define CAN_MAX_MSG_LENGTH 14 // idType 1byte + id 4 bytes + dlc 1 byte + data CAN_MAX_DLEN = 14 bytes

// ----------------- GPIO Defines -----------------
// These are the GPIO ports and pins that are used by the OPDM driver.
// They were generated by CubeIDE.
#define INTERNAL_LED_Pin GPIO_PIN_13
#define INTERNAL_LED_GPIO_Port GPIOC
#define MUX_INPUTS_A1_Pin GPIO_PIN_14
#define MUX_INPUTS_A1_GPIO_Port GPIOC
#define MUX_INPUTS_A2_Pin GPIO_PIN_15
#define MUX_INPUTS_A2_GPIO_Port GPIOC
#define CURRENT_VOLTAGE_SENSE_ADC_PIN_Pin GPIO_PIN_0
#define CURRENT_VOLTAGE_SENSE_ADC_PIN_GPIO_Port GPIOA
#define AD_INPUTS_ADC_PIN_Pin GPIO_PIN_1
#define AD_INPUTS_ADC_PIN_GPIO_Port GPIOA
#define STATUS_LED_Pin GPIO_PIN_3
#define STATUS_LED_GPIO_Port GPIOA
#define GATE_LC0_SIG_Pin GPIO_PIN_7
#define GATE_LC0_SIG_GPIO_Port GPIOA
#define GATE_LC1_SIG_Pin GPIO_PIN_6
#define GATE_LC1_SIG_GPIO_Port GPIOA
#define GATE_LC2_SIG_Pin GPIO_PIN_5
#define GATE_LC2_SIG_GPIO_Port GPIOA
#define GATE_LC3_SIG_Pin GPIO_PIN_4
#define GATE_LC3_SIG_GPIO_Port GPIOA
#define GATE_HC1_SIG_Pin GPIO_PIN_1
#define GATE_HC1_SIG_GPIO_Port GPIOB
#define GATE_HC0_SIG_Pin GPIO_PIN_0
#define GATE_HC0_SIG_GPIO_Port GPIOB
#define GATE_HC3_SIG_Pin GPIO_PIN_11
#define GATE_HC3_SIG_GPIO_Port GPIOB
#define GATE_HC2_SIG_Pin GPIO_PIN_10
#define GATE_HC2_SIG_GPIO_Port GPIOB
#define CAN_CS_Pin GPIO_PIN_12
#define CAN_CS_GPIO_Port GPIOB
#define CANC_INTERRUPT_Pin GPIO_PIN_8
#define CANC_INTERRUPT_GPIO_Port GPIOA
#define CANB_ERR_Pin GPIO_PIN_9
#define CANB_ERR_GPIO_Port GPIOA
#define CANB_STB_Pin GPIO_PIN_10
#define CANB_STB_GPIO_Port GPIOA
#define MUX_CUR_SENSE_A3_Pin GPIO_PIN_15
#define MUX_CUR_SENSE_A3_GPIO_Port GPIOA
#define MUX_CUR_SENSE_A2_Pin GPIO_PIN_3
#define MUX_CUR_SENSE_A2_GPIO_Port GPIOB
#define MUX_CUR_SENSE_A1_Pin GPIO_PIN_4
#define MUX_CUR_SENSE_A1_GPIO_Port GPIOB
#define MUX_CUR_SENSE_A0_Pin GPIO_PIN_5
#define MUX_CUR_SENSE_A0_GPIO_Port GPIOB
#define CANB_EN_Pin GPIO_PIN_6
#define CANB_EN_GPIO_Port GPIOB
#define MUX_INPUTS_A0_Pin GPIO_PIN_7
#define MUX_INPUTS_A0_GPIO_Port GPIOB


typedef enum{
	DIGITAL_ACTIVE_H = 0,
	DIGITAL_ACTIVE_L,
	LINEAR_ANALOG,
	CALIBRATED_ANALOG,
	ROTARY_SWITCH,
	NUM_OF_INPUT_TYPES
}OPDM_INPUT_TYPE;


typedef enum{
  CAN_B = 0,
  CAN_C,
  NUM_OF_CAN_BUSES
}PDMHAL_CAN_BusType;

typedef enum{
  CAN_Standard = 1,
  CAN_Extended = 2,
}PDMHAL_CAN_BusFrameFormat;

typedef union {
  struct {
	PDMHAL_CAN_BusType CANBus;
	PDMHAL_CAN_BusFrameFormat idType;
    uint32_t id;
    uint8_t dataLengthCode;
    uint8_t data[CAN_MAX_DLEN];
  } frame;
  struct {
	PDMHAL_CAN_BusType CANBus;
	uint8_t array[CAN_MAX_MSG_LENGTH];
  }alternate_frame;
} PDMHAL_CAN_MessageFrame;

typedef struct{
	GPIO_TypeDef *port;
    uint16_t pin;
}PDMHAL_PortPinTypedef;

#endif /* OPDM_DRIVER_INC_OPDM_HAL_DEF_H_ */
